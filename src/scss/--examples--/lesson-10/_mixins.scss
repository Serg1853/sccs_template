// @mixin size($width, $height) {
//   width: $width;
//   height: $height;
// }

// .avatar {
//   @include size(150px, 200px);

//   border-radius: 50%;
// }

// Arguments
// @mixin position-center {
//   position: absolute;
//   top: 50%;
//   left: 50%;
//   transform: translate(-50%, -50%);
// }

// .decoration {
//   @include position-center();
// }

// @mixin position(
//   $layer-index,
//   $position-type: absolute,
//   $position-x: 50%,
//   $position-y: $position-x,
//   $offset-x: $position-x,
//   $offset-y: $position-x
// ) {
//   position: $position-type;
//   top: $position-x;
//   left: $position-y;
//   transform: translate(($offset-x * -1), ($offset-y * -1));
// }

// .decoration {
//   @include position(100);
// }

// @mixin btn-size($args...) {
//   @for $i from 1 through length($args) {
//     #{nth($args,$i)} {
//       $factor: ($i * 4-4);

//       padding: (4px + $factor) (8px + $factor);

//       border-radius: (8px + $factor);
//     }
//   }
// }

// @include btn-size(".btn-sm", ".btn-md", ".btn-lg");

// @use "sass:meta";

// @mixin btn-type($types...) {
//   // Arguments map
// // $types: (
// //   $success: lightgreen,
// //   $error: tomato,
// //   $info: lightblue,
// // );
//   @each $name, $color in meta.keywords($types) {
//     .btn-#{$name} {
//       border: 2px solid $color;
//       color: $color;
//     }
//   }
// }

// @include btn-type($success: lightgreen, $error: tomato, $info: lightblue);

@mixin hover($state) {
  &:not([#{$state}]):hover {
    @content;
  }
}

.button {
  background-color: #fff;
  border: 1px solid darkblue;

  @include hover($state: disabled) {
    color: white;
    background-color: darkblue;
  }
}
